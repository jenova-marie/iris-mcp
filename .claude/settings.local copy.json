{
  "permissions": {
    "allow": [
      "Bash(pnpm init:*)",
      "Bash(pnpm add:*)",
      "Bash(pnpm test:*)",
      "Bash(pnpm build:*)",
      "Bash(git log:*)",
      "Bash(pnpm install:*)",
      "Bash(tree:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "mcp__memory__database_switch",
      "mcp__memory__memory_find",
      "mcp__memory__memory_store",
      "Bash(pnpm rebuild:*)",
      "Bash(pnpm approve-builds:*)",
      "Bash(npm run build-release:*)",
      "Bash(pnpm vitest:*)",
      "Bash(pnpm exec vitest:*)",
      "Bash(node:*)",
      "Bash(claude mcp:*)",
      "Bash(cp:*)",
      "Bash(timeout:*)",
      "Bash(pnpm inspector:*)",
      "Bash(chmod:*)",
      "Bash(pnpm test:run:*)",
      "Read(//Users/jenova/Library/Caches/claude-cli-nodejs/-Users-jenova-projects-jenova-marie-iris-mcp-tests-test-team/**)",
      "Bash(cat:*)",
      "mcp__iris__teams_ask",
      "Bash(pnpm test:integration:*)",
      "Read(//Users/jenova/projects/**)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(find:*)",
      "Bash(DEBUG=1 pnpm vitest run tests/integration/process/claude-process.test.ts --testNamePattern=\"should send simple message\")",
      "Bash(export DEBUG=1)",
      "Bash(DEBUG=1 pnpm vitest run tests/integration/process/claude-process.test.ts --testNamePattern=\"should send simple message and receive response\")",
      "Read(//Users/jenova/.claude/**)",
      "Bash(DEBUG=1 timeout 30 pnpm vitest run tests/integration/process/pool-manager.test.ts --testNamePattern=\"should create separate processes for different teams\")",
      "Bash(for dir in teams/team-*)",
      "Bash(do echo \"=== $dir ===\")",
      "Bash(ls:*)",
      "Bash(done)",
      "Bash(pnpm test:unit:*)",
      "Bash(DEBUG=1 pnpm vitest run tests/integration/session/session-manager.test.ts --testNamePattern=\"should reject unknown team\" -t 30000)",
      "Bash(NODE_ENV=test pnpm vitest run tests/integration/tools/mcp-tools.test.ts)",
      "Bash(NODE_ENV=test pnpm vitest run tests/integration/tools/mcp-tools.test.ts --reporter=verbose)",
      "Bash(NODE_ENV=test timeout 120 pnpm vitest run tests/integration/tools/mcp-tools.test.ts --reporter=dot)",
      "Bash(export NODE_ENV=test)",
      "Bash(pnpm tsc:*)",
      "Bash(DEBUG=1 pnpm test:run tests/integration/tools/teams-ask.test.ts --testNamePattern=\"should send question and receive response\")",
      "Bash(DEBUG=1 timeout 25 pnpm vitest run tests/integration/tools/teams-send-message.test.ts --testNamePattern=\"should use default timeout\")",
      "Bash(tee:*)",
      "Bash(npx tsc:*)",
      "Bash(echo $PATH)",
      "Bash(/Users/jenova/.asdf/installs/nodejs/22.16.0/bin/claude --version)",
      "Bash(echo \"Exit code: $?\")",
      "Bash(/Users/jenova/.asdf/installs/nodejs/22.16.0/bin/claude --help)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:spec.modelcontextprotocol.io)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(curl:*)",
      "Bash(pkill:*)",
      "Read(//Users/jenova/Library/**)",
      "Read(//Users/jenova/**)",
      "Bash(npx @modelcontextprotocol/inspector:*)",
      "Bash(lsof:*)",
      "Bash(awk:*)",
      "Bash(xargs kill:*)",
      "mcp__iris__teams_request",
      "Bash(REUSE_DB=1 pnpm test:run:*)",
      "Bash(for file in tests/integration/**/*.test.ts)",
      "Bash(do)",
      "Bash(echo \"=== $file ===\")",
      "mcp__sequential-thinking__sequentialthinking",
      "Bash(REUSE_DB=1 pnpm vitest run:*)",
      "WebSearch",
      "Bash(echo:*)",
      "WebFetch(domain:localhost)",
      "Bash(git rm:*)",
      "mcp__iris__team_wake",
      "mcp__iris__team_tell",
      "mcp__iris__team_report",
      "mcp__iris__team_isAwake",
      "mcp__iris__team_cache_read",
      "mcp__iris__team_cache_clear",
      "mcp__iris__team_wake_all",
      "mcp__iris__team_getTeamName"
    ],
    "deny": [],
    "ask": []
  }
}
